{"ast":null,"code":"var _jsxFileName = \"/home/karishma/Desktop/employee_database/Client/employee_data/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport { ApolloClient, InMemoryCache, ApolloProvider, HttpLink, from } from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport Header from \"./Component/Header\";\nimport EmployeeList from \"./Component/EmployeeList\"; // const errorLink = onError(({ graphqlErrors, networkError }) => {\n//   if (graphqlErrors) {\n//     graphqlErrors.map(({ message, location, path }) => {\n//       alert(`Graphql error ${message}`);\n//     });\n//   }\n// });\n// const link = from([\n//   errorLink,\n//   new HttpLink({\n//     uri: \"http://localhost:5000/graphql\", credentials: 'same-origin',\n//     credentials: true\n//   }),\n// ]);\n// const client = new ApolloClient({\n//   cache: new InMemoryCache(),\n//   uri: \"http://localhost:5000/graphql\",\n//   credentials: 'same-origin',\n//   credentials: true\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cache = new InMemoryCache({\n  typePolicies: {\n    Query: {\n      fields: {\n        clients: {\n          merge(existing, incoming) {\n            return incoming;\n          }\n\n        },\n        prohects: {\n          merge(existing, incoming) {\n            return incoming;\n          }\n\n        }\n      }\n    }\n  }\n});\nconst client = new ApolloClient({\n  uri: 'http://localhost:5000/graphql',\n  cache\n});\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ApolloProvider, {\n      client: client,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EmployeeList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ApolloClient","InMemoryCache","ApolloProvider","HttpLink","from","onError","Header","EmployeeList","cache","typePolicies","Query","fields","clients","merge","existing","incoming","prohects","client","uri","App"],"sources":["/home/karishma/Desktop/employee_database/Client/employee_data/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport './App.css';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  HttpLink,\n  from,\n} from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport Header from \"./Component/Header\";\nimport EmployeeList from \"./Component/EmployeeList\";\n\n\n// const errorLink = onError(({ graphqlErrors, networkError }) => {\n//   if (graphqlErrors) {\n//     graphqlErrors.map(({ message, location, path }) => {\n//       alert(`Graphql error ${message}`);\n//     });\n//   }\n// });\n\n// const link = from([\n//   errorLink,\n//   new HttpLink({\n//     uri: \"http://localhost:5000/graphql\", credentials: 'same-origin',\n//     credentials: true\n//   }),\n// ]);\n\n// const client = new ApolloClient({\n//   cache: new InMemoryCache(),\n//   uri: \"http://localhost:5000/graphql\",\n//   credentials: 'same-origin',\n//   credentials: true\n// });\n\nconst cache = new InMemoryCache({\n  typePolicies: {\n    Query: {\n      fields: {\n        clients: {\n          merge(existing, incoming) {\n            return incoming;\n          }\n        },\n        prohects: {\n          merge(existing, incoming) {\n            return incoming;\n          }\n        }\n      }\n    }\n  }\n});\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:5000/graphql',\n  cache,\n})\nfunction App() {\n\n\n\n  return (\n    <>\n      <ApolloProvider client={client}>\n        <Header />\n        <EmployeeList />\n        {/* <Form /> */}\n      </ApolloProvider>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAO,WAAP;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,QAJF,EAKEC,IALF,QAMO,gBANP;AAOA,SAASC,OAAT,QAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,YAAP,MAAyB,0BAAzB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,KAAK,GAAG,IAAIP,aAAJ,CAAkB;EAC9BQ,YAAY,EAAE;IACZC,KAAK,EAAE;MACLC,MAAM,EAAE;QACNC,OAAO,EAAE;UACPC,KAAK,CAACC,QAAD,EAAWC,QAAX,EAAqB;YACxB,OAAOA,QAAP;UACD;;QAHM,CADH;QAMNC,QAAQ,EAAE;UACRH,KAAK,CAACC,QAAD,EAAWC,QAAX,EAAqB;YACxB,OAAOA,QAAP;UACD;;QAHO;MANJ;IADH;EADK;AADgB,CAAlB,CAAd;AAmBA,MAAME,MAAM,GAAG,IAAIjB,YAAJ,CAAiB;EAC9BkB,GAAG,EAAE,+BADyB;EAE9BV;AAF8B,CAAjB,CAAf;;AAIA,SAASW,GAAT,GAAe;EAIb,oBACE;IAAA,uBACE,QAAC,cAAD;MAAgB,MAAM,EAAEF,MAAxB;MAAA,wBACE,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,YAAD;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AASD;;KAbQE,G;AAeT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}